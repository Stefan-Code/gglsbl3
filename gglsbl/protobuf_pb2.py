# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protobuf.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)




DESCRIPTOR = _descriptor.FileDescriptor(
  name='protobuf.proto',
  package='',
  serialized_pb='\n\x0eprotobuf.proto\"\xfa\x01\n\tChunkData\x12\x14\n\x0c\x63hunk_number\x18\x01 \x02(\x05\x12-\n\nchunk_type\x18\x02 \x01(\x0e\x32\x14.ChunkData.ChunkType:\x03\x41\x44\x44\x12\x35\n\x0bprefix_type\x18\x03 \x01(\x0e\x32\x15.ChunkData.PrefixType:\tPREFIX_4B\x12\x0e\n\x06hashes\x18\x04 \x01(\x0c\x12\x17\n\x0b\x61\x64\x64_numbers\x18\x05 \x03(\x05\x42\x02\x10\x01\"\x1d\n\tChunkType\x12\x07\n\x03\x41\x44\x44\x10\x00\x12\x07\n\x03SUB\x10\x01\")\n\nPrefixType\x12\r\n\tPREFIX_4B\x10\x00\x12\x0c\n\x08\x46ULL_32B\x10\x01')



_CHUNKDATA_CHUNKTYPE = _descriptor.EnumDescriptor(
  name='ChunkType',
  full_name='ChunkData.ChunkType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ADD', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUB', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=197,
  serialized_end=226,
)

_CHUNKDATA_PREFIXTYPE = _descriptor.EnumDescriptor(
  name='PrefixType',
  full_name='ChunkData.PrefixType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PREFIX_4B', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FULL_32B', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=228,
  serialized_end=269,
)


_CHUNKDATA = _descriptor.Descriptor(
  name='ChunkData',
  full_name='ChunkData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chunk_number', full_name='ChunkData.chunk_number', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='chunk_type', full_name='ChunkData.chunk_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='prefix_type', full_name='ChunkData.prefix_type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hashes', full_name='ChunkData.hashes', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='add_numbers', full_name='ChunkData.add_numbers', index=4,
      number=5, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\020\001')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CHUNKDATA_CHUNKTYPE,
    _CHUNKDATA_PREFIXTYPE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=19,
  serialized_end=269,
)

_CHUNKDATA.fields_by_name['chunk_type'].enum_type = _CHUNKDATA_CHUNKTYPE
_CHUNKDATA.fields_by_name['prefix_type'].enum_type = _CHUNKDATA_PREFIXTYPE
_CHUNKDATA_CHUNKTYPE.containing_type = _CHUNKDATA;
_CHUNKDATA_PREFIXTYPE.containing_type = _CHUNKDATA;
DESCRIPTOR.message_types_by_name['ChunkData'] = _CHUNKDATA

class ChunkData(_message.Message, metaclass=_reflection.GeneratedProtocolMessageType):
  DESCRIPTOR = _CHUNKDATA

  # @@protoc_insertion_point(class_scope:ChunkData)


_CHUNKDATA.fields_by_name['add_numbers'].has_options = True
_CHUNKDATA.fields_by_name['add_numbers']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\020\001')
# @@protoc_insertion_point(module_scope)
